name: "CI"

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: "npm"
      - run: npm ci
      - run: "jq -r .description < metadata.json"
      - run: npm run lint
      - run: npm run format --check
      - run: npm run check:types

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: "npm"
      - name: Install gettext, gnome-shell, and strip-nondeterminism
        run: |
          sudo apt-get update -qq
          sudo apt-get install --no-install-recommends -qq -y gettext gnome-shell strip-nondeterminism
      - run: npm ci
      - run: npm run pack
      - run: strip-nondeterminism dist/*.zip
      - run: b2sum *.zip > B2SUMS.txt
        working-directory: dist
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: "dist/*"

  create-release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    # Only create a release on a tag
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v4
        with:
          # This makes sure we actually get the tag message body down below,
          # see https://github.com/actions/runner/issues/712
          ref: "${{ github.ref }}"
      - uses: actions/download-artifact@v4
        with:
          path: dist
          name: dist
      - run: echo "RELEASE_SUBJECT=$(git tag -ln1 --format='%(contents:subject)' "${GITHUB_REF_NAME}")" >> "$GITHUB_ENV"
      - run: git tag -ln1 --format='%(contents:body)' "${GITHUB_REF_NAME}" > ${{ github.workspace }}-body.txt
      - uses: softprops/action-gh-release@v2
        with:
          name: "${{ env.RELEASE_SUBJECT }}"
          body_path: "${{ github.workspace }}-body.txt"
          files: "dist/*"
          fail_on_unmatched_files: true

  upload-ego:
    runs-on: ubuntu-latest
    needs: build
    # Only upload releases from tags which denote a version, i.e. start with v
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2
        with:
          deno-version: vx.x.x
      - uses: actions/download-artifact@v4
        with:
          path: dist
          name: dist
      - name: "ego-upload picture-of-the-day@swsnr.de.shell-extension.zip"
        run: |
          deno run --quiet \
            --allow-read \
            --allow-env=EGO_USERNAME,EGO_PASSWORD \
            --allow-net=extensions.gnome.org \
            https://raw.githubusercontent.com/swsnr/ego-upload/main/ego-upload.ts \
            -c ./.ego-confirmation.json \
            ./dist/picture-of-the-day@swsnr.de.shell-extension.zip
        env:
          EGO_USERNAME: ${{ secrets.EGO_USERNAME }}
          EGO_PASSWORD: ${{ secrets.EGO_PASSWORD }}
